{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://fisheye/./src/class/Photographer.js","webpack://fisheye/./src/class/Filter.js","webpack://fisheye/./src/service/api.js","webpack://fisheye/./src/index.js"],"sourcesContent":["/**\r\n * Class to create a photographer\r\n */\r\nexport default class Photographer {\r\n\t/**\r\n\t * \r\n\t * @param {string} name name of the photographer\r\n\t * @param {string} city City where the photographer live\r\n\t * @param {string} country Country where the photographer live\r\n\t * @param {string[]} tags An array an array of tags \r\n\t * @param {string} tagline The tagline of the photographer\r\n\t * @param {number} price The price dayliprice of the photographer\r\n\t * @param {string} portrait The file name with the extension of his portrait\r\n\t * @param {number} id The id of the photographer\r\n\t */\r\n\tconstructor( name, city, country, tags, tagline, price, portrait, id) {\r\n\t\tthis.name = name\r\n\t\tthis.city = city\r\n\t\tthis.country = country\r\n\t\tthis.tags = tags\r\n\t\tthis.tagline = tagline\r\n\t\tthis.price = price\r\n\t\tthis.portrait = portrait\r\n\t\tthis.id = id\r\n\t}\r\n\tdom = {\r\n\t\tphotographers : document.querySelector('.photographers'),\r\n\t\tphotographer : document.querySelector('.photographer'),\r\n\t\tnameInForm : document.querySelector('.modal__head')\r\n\t}\r\n\t/**\r\n\t *  Construct the Dom Element of the price on photographer's profil page\r\n\t * @returns A string that contain the DOM element with the price\r\n\t */\r\n\tgetPrice = () => {\r\n\t\treturn `\r\n\t\t<p class=\"infos__price\">${this.price}â‚¬ / jour</p>\r\n\t\t`\r\n\t}\r\n\r\n\t/**\r\n\t * Construct all tags in the photographer's card on home page\r\n\t * @returns A string that contain all Dom Elements for each tag\r\n\t */\r\n\ttagsForPhotographersCards = () => {\r\n\t\tlet spanTags = ''\r\n\t\tfor (let i = 0; i < this.tags.length; i++) {\r\n\t\t\tspanTags += `<span class=\"photographer__tag\"><a href=\"./index.html?tag=${this.tags[i]}\">#${this.tags[i]}</a></span>`\r\n\t\t}\r\n\t\treturn spanTags\r\n\t}\r\n\r\n\t/**\r\n\t * To construct a photographer's card on home page\r\n\t * @returns A string that correspond to the DOM elements for a photographer's card on home page\r\n\t */\r\n\tget photographerCard() {\r\n\t\treturn `\r\n\t\t<article class=\"photographer\">\r\n\t\t\t<a href=\"./photographers/index.html?id=${this.id}\" class=\"photographer__header\">\r\n\t\t\t\t<img class=\"photographer__img\" src=\"public/images/photographers/id_photos/${this.portrait}\" alt=\"${this.name}\">\r\n\t\t\t\t<h2 class=\"photographer__name\">${this.name}</h2>\r\n\t\t\t</a>\r\n\t\t\t<div class=\"photographer__content\">\r\n\t\t\t\t<p class=\"photographer__location\">${this.city}, ${this.country}</p>\r\n\t\t\t\t<p class=\"photographer__tagline\">${this.tagline}</p>\r\n\t\t\t\t<p class=\"photographer__price\">${this.price}â‚¬/jour</p>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"photographer__tags\">` + this.tagsForPhotographersCards() + `</div>\r\n\t\t</article>\r\n\t\t`\r\n\t}\r\n\r\n\t/**\r\n\t * Construct all tags in the photographer's card on photographer's profil page\r\n\t * @returns A string that contain all Dom Elements for each tag\r\n\t */\r\n\ttagsForPhotographerHeader = () => {\r\n\t\tlet spanTags = ''\r\n\t\tfor (let i = 0; i < this.tags.length; i++) {\r\n\t\t\tspanTags += `<span class=\"photographer__tag\"><a href=\"../index.html?tag=${this.tags[i]}\">#${this.tags[i]}</a></span>`\r\n\t\t}\r\n\t\treturn spanTags\r\n\t}\r\n\r\n\t/**\r\n\t * To construct a photographer's card on photographer's profil page\r\n\t * @returns A string that correspond to the DOM elements for a photographer's card on photographer's profil page\r\n\t */\r\n\tget photographerHeader() {\r\n\t\treturn `\r\n\t\t<article class=\"photographer__profil\">\r\n\t\t\t<div class=\"photographer__body\">\r\n\t\t\t\t<div class=\"photographer__content\">\r\n\t\t\t\t\t<h1 class=\"photographer__name\">${this.name}</h1>\r\n\t\t\t\t\t<p class=\"photographer__location\">${this.city}, ${this.country}</p>\r\n\t\t\t\t\t<p class=\"photographer__tagline\">${this.tagline}</p>\r\n\t\t\t\t\t<div class=\"photographer__tags\">` + this.tagsForPhotographerHeader() + `</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button class=\"photographer__contactButton\">Contactez-moi</button>\r\n\t\t\t</div>\r\n\t\t\t<img class=\"photographer__img\" src=\"../public/images/photographers/id_photos/${this.portrait}\" alt=\"${this.name}\">\r\n\t\t</article>\r\n\t\t`\r\n\t}\r\n\r\n\t/**\r\n\t *  Construct the Dom Element withe the photographer's name for the contact form on photographer's profil page\r\n\t * @returns A string that contain the DOM element with the photographer's name\r\n\t */\r\n\tget photographerNameInForm() {\r\n\t\treturn `\r\n\t\t\t<h1 class=\"modal__head\" id=\"contact\">Contactez-moi </br> ${this.name}</h1>\r\n\t\t`   \r\n\t}\r\n\r\n}","/**\r\n * Class to create a filter\r\n */\r\nexport default class Filter {\r\n\t/**\r\n\t * \r\n\t * @param {string} filter \r\n\t */\r\n\tconstructor(filter) {\r\n\t\tthis.filter = filter\r\n\t}\r\n\r\n\t/**\r\n\t * To construct the Dom Element of a tag in the header of the Home page\r\n\t * @return A string that correspond to a Dom Element that contain the filter\r\n\t */\r\n\tget displayFilter() {\r\n\t\treturn `\r\n\t\t<li class=\"header__filter-list-item\">\r\n\t\t\t<a href=\"./index.html?tag=${this.filter}\" class=\"header__filter-tag\">#${this.filter}</a>\r\n\t\t</li>\r\n\t\t`\r\n\t}\r\n}","import Photographer from '../class/Photographer.js'\r\nimport Media from '../../photographers/src/class/Media.js'\r\nimport Filter from '../class/Filter.js'\r\n\r\n/**\r\n * Function that get Data of an URL and parsed as Json format\r\n * @returns parsed data as json format\r\n */\r\nlet parseDataToJson = async () => {\r\n\tconst url = 'https://roy-framery-s-openclassrooms-projects.github.io/RoyFramery_6_10082021/fisheyeData.json'\r\n\tconst response = await fetch(url)\r\n\tif (response.ok) {\r\n\t\treturn response.json()\r\n\t} else {\r\n\t\tconsole.error(response.status)\r\n\t}\r\n}\r\n\r\n/**\r\n * Function that waiting parsed Data as Json format \r\n * and uses a loop to instantiate a new Photographer class for each photographer\r\n * @param {object} jsonData parsed data as json format\r\n * @returns an array of instantiations of the Photographer class\r\n */\r\nlet getPhotographers = async(jsonData) => {\r\n\tconst data = await jsonData\r\n\tconst photographers = data.photographers\r\n\tlet photographersArray = []\r\n\tphotographers.map(data => {\r\n\t\tphotographersArray.push(new Photographer(data.name, data.city, data.country, data.tags, data.tagline, data.price, data.portrait, data.id))\r\n\t})\r\n\treturn photographersArray\r\n}\r\n\r\n/**\r\n * Function that waiting parsed Data as Json format \r\n * and uses a loop to instantiate a new Photographer class according to the photographer's id\r\n * @param {object} jsonData parsed data as json format\r\n * @param {number} id The id of the photographer get in URL's parameter\r\n * @returns An instantiations of the Photographer class\r\n */\r\nlet getPhotographersById = async(jsonData, id) => {\r\n\tconst data = await jsonData\r\n\tconst photographers = data.photographers\r\n\tlet photographerArray = []\r\n\tphotographers.map(data => {\r\n\t\t// if the Id in URL's parameter is the same as the photographer's id, then create an instance of Photographer\r\n\t\tif (id == data.id) {\r\n\t\t\tphotographerArray.push(new Photographer(data.name, data.city, data.country, data.tags, data.tagline, data.price, data.portrait, data.id))\r\n\t\t}\r\n\t})\r\n\treturn photographerArray\r\n}\r\n\r\n/**\r\n * Function that waiting parsed Data as Json format\r\n * and instantiates new filter class for each tags\r\n * @param {object} jsonData parsed data as json format\r\n * @returns An array of instantiations of the filter class\r\n */\r\nlet getTagsFromPhotographers = async(jsonData) => {\r\n\tconst data = await jsonData\r\n\tconst photographers = data.photographers\r\n\tlet filters = []\r\n\t// Loop to remove duplicate tags\r\n\tfor (let photographer of photographers) {\r\n\t\tfor (let tag of photographer.tags) {\r\n\t\t\tif (!filters.includes(tag)) {\r\n\t\t\t\tfilters.push(tag)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tlet tags = []\r\n\t// Loop to create instanciation of filter for each tags\r\n\tfilters.map(filter => \r\n\t\ttags.push(new Filter(filter))\r\n\t)\r\n\treturn tags\r\n}\r\n\r\n/**\r\n * Function that waiting parsed Data as Json format \r\n * and uses a loop to instantiate a new media class according to the media's id\r\n * @param {object} jsonData parsed data as json format\r\n * @param {number} id The id of the photographer get in URL's parameter\r\n * @param {string} filter option in the select element on photographer's profil page\r\n * @returns An array of instantiations of Media for each media\r\n */\r\nlet getMediaByPhotographerId = async(jsonData, id, filter) => {\r\n\tconst data = await jsonData\r\n\tconst media = data.media\r\n\tlet mediaArray = []\r\n\tmedia.map(media => {\r\n\t\t// if the Id in URL's parameter is the same as the media's id, then create an instance of Photographer\r\n\t\tif (id == media.photographerId) {\r\n\t\t\tmediaArray.push(new Media( media.title, media['image'] ? media.image : media.video, media.likes, media.altTxt, media['image'] ? 'image' : 'video', media.date))\r\n\t\t}\r\n\t})\r\n\tsortMediaByFilter(mediaArray, filter)\r\n\treturn mediaArray\r\n}\r\n\r\n/**\r\n * Sorts an array according to the filter passed in parameter\r\n * @param {object[]} media Array of instantiations of the media class\r\n * @param {string} filter option in the select element on photographer's profil page\r\n * @returns An array of objects sorted by a filter \r\n */\r\nlet sortMediaByFilter = (media, filter) => {\r\n\tswitch (filter) {\r\n\tcase 'likes':\r\n\t\treturn media.sort((a,b) => {\r\n\t\t\treturn  b[filter] - a[filter]\r\n\t\t}) \r\n\tcase 'title':\r\n\t\treturn media.sort((a,b) => {\r\n\t\t\tif(a[filter] < b[filter]) { return -1 }\r\n\t\t\tif(a[filter] > b[filter]) { return 1 }\r\n\t\t\treturn 0\r\n\t\t}) \r\n\tcase 'date':\r\n\t\treturn media.sort((a,b) => {\r\n\t\t\treturn new Date(b[filter]) - new Date(a[filter])\r\n\t\t}) \r\n\tdefault:\r\n\t\tbreak\r\n\t}\r\n}\r\n\r\nexport {parseDataToJson, getPhotographers, getTagsFromPhotographers, getPhotographersById, getMediaByPhotographerId}","import {parseDataToJson, getPhotographers, getTagsFromPhotographers} from './service/api.js'\r\n\r\nconst dom = {\r\n\tphotographersContainer : document.querySelector('.photographers'),\r\n\tfiltersList : document.querySelector('.header__filter-list')\r\n}\r\n\r\n// to display tags in the header\r\nconst tags = getTagsFromPhotographers(parseDataToJson())\r\ntags.then( tags =>\r\n\ttags.map( tag => {\r\n\t\t// displatFilter is a getter of Filter Class\r\n\t\tdom.filtersList.insertAdjacentHTML('beforeend', tag.displayFilter)\r\n\t})\r\n)\r\n\r\n// get tag param to filter\r\nconst queryString = window.location.search\r\nconst urlParams = new URLSearchParams(queryString)\r\nconst paramTag = urlParams.get('tag')\r\n\r\n// to display photographers cards\r\nconst photographers = getPhotographers(parseDataToJson())\r\nphotographers.then(photographers => {\r\n\tphotographers.map(photographer => {\r\n\t\t// if there are not a tag in URL's parameter, then it insert the photographers' cards\r\n\t\tif (paramTag == null) {\r\n\t\t\tdom.photographersContainer.insertAdjacentHTML('beforeend', photographer.photographerCard)\r\n\t\t} \r\n\t\t// else if there are a tag in URL's parameter, then create a loop to browse the tags of each photographer\r\n\t\telse {\r\n\t\t\tfor (const tag of photographer.tags) {\r\n\t\t\t\t// if the paramter tag in the URL matches with on of the photographer's tag, \r\n\t\t\t\t// then insert the photographers' cards\r\n\t\t\t\tif (paramTag == tag) {\r\n\t\t\t\t\t// phototographerCard is a getter of the Photographer Class\r\n\t\t\t\t\tdom.photographersContainer.insertAdjacentHTML('beforeend', photographer.photographerCard)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n})\r\n\r\n// display \"go to content\" link on scroll\r\nconst contentLink = document.querySelector('.anchor')\r\nwindow.addEventListener('scroll', () => {\r\n\t// Displays the link only if the user's screen width is greater than 1023\r\n\tif (document.documentElement.clientWidth > 1023) {\r\n\t\tcontentLink.style.display = 'block'\r\n\t}\r\n})\r\n"],"names":["Photographer","name","city","country","tags","tagline","price","portrait","id","photographers","document","querySelector","photographer","nameInForm","spanTags","i","length","tagsForPhotographersCards","tagsForPhotographerHeader","Filter","filter","Media","parseDataToJson","url","fetch","response","ok","json","console","error","status","getPhotographers","jsonData","data","photographersArray","map","push","getPhotographersById","photographerArray","getTagsFromPhotographers","filters","tag","includes","getMediaByPhotographerId","media","mediaArray","photographerId","title","image","video","likes","altTxt","date","sortMediaByFilter","sort","a","b","Date","dom","photographersContainer","filtersList","then","insertAdjacentHTML","displayFilter","queryString","window","location","search","urlParams","URLSearchParams","paramTag","get","photographerCard","contentLink","addEventListener","documentElement","clientWidth","style","display"],"sourceRoot":""}